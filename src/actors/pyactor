#!/usr/bin/env python


import sys

from actorlib import send, receive

from src.plambda.Interpreter import Interpreter

from src.visitor.Parser import parseFromString

class Main(object):

    _debug = False
    
    def __init__(self, name):
        """Creates an plambda Actor object with the given name."""
        self.client = client
        self.name = name
        self.interpreter = Interpreter()

    def main(cmd):
        fails = 0
            
        while True:
            incoming = receive()
            if incoming is None:
                fails += 1
                if fails > 10:
                    return 0
     	    (sender, msg) = incoming
            
            self.process_message(sender, msg)
                
        
    def process_message(self, sender, msg):
        self.interpreter.evaluateString(msg)
            

    
    
if __name__ == '__main__':
    if len(sys.argv) != 2:
        print usage.format(cmd[0])
        sys.exit(1)
    else:
        sys.exit(main(sys.argv))

    
usage = """
Usage: {0} <actor name>
"""
